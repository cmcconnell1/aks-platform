name: Terraform Drift Detection

on:
  schedule:
    # Run every day at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to check for drift'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

env:
  TF_VERSION: '1.7.5'

jobs:
  drift-detection:
    name: Drift Detection
    runs-on: ubuntu-latest
    environment: ${{ matrix.environment }}
    strategy:
      matrix:
        environment: [dev, staging, prod]

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Setup Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Setup Python Virtual Environment
        run: |
          python -m venv venv
          echo "VIRTUAL_ENV=$PWD/venv" >> $GITHUB_ENV
          echo "$PWD/venv/bin" >> $GITHUB_PATH
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="environments/${{ matrix.environment }}/backend.conf"
        working-directory: terraform

      - name: Terraform Plan (Drift Check)
        id: drift
        run: |
          terraform plan \
            -var-file="environments/${{ matrix.environment }}/terraform.tfvars" \
            -detailed-exitcode \
            -out=drift-${{ matrix.environment }}.tfplan
        working-directory: terraform
        continue-on-error: true

      - name: Check for Drift
        id: check-drift
        run: |
          if [ ${{ steps.drift.outputs.exitcode }} -eq 2 ]; then
            echo "drift_detected=true" >> $GITHUB_OUTPUT
            echo "Drift detected in ${{ matrix.environment }} environment"
          else
            echo "drift_detected=false" >> $GITHUB_OUTPUT
            echo "No drift detected in ${{ matrix.environment }} environment"
          fi

      - name: Upload Drift Plan
        if: steps.check-drift.outputs.drift_detected == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: drift-plan-${{ matrix.environment }}
          path: terraform/drift-${{ matrix.environment }}.tfplan
          retention-days: 7

      - name: Create Issue for Drift
        if: steps.check-drift.outputs.drift_detected == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const title = `Infrastructure Drift Detected - ${{ matrix.environment }} Environment`;
            const body = `
            ## Infrastructure Drift Detected
            
            **Environment**: ${{ matrix.environment }}
            **Detection Time**: ${new Date().toISOString()}
            **Workflow Run**: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            ### Description
            Terraform has detected that the actual infrastructure state differs from the expected state defined in the code.
            
            ### Action Required
            1. Review the drift plan artifact from this workflow run
            2. Investigate the cause of the drift
            3. Either:
               - Update the Terraform code to match the current state, or
               - Apply the Terraform configuration to restore the expected state
            
            ### Terraform Plan Output
            \`\`\`
            ${{ steps.drift.outputs.stdout }}
            \`\`\`
            
            ### Next Steps
            - [ ] Review the changes
            - [ ] Determine if changes are intentional
            - [ ] Update code or apply configuration as needed
            - [ ] Close this issue once resolved
            `;
            
            // Check if issue already exists
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['infrastructure-drift', `environment:${{ matrix.environment }}`]
            });
            
            if (issues.data.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['infrastructure-drift', `environment:${{ matrix.environment }}`, 'priority:high']
              });
            } else {
              // Update existing issue
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issues.data[0].number,
                body: `New drift detected at ${new Date().toISOString()}\n\nWorkflow Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`
              });
            }

      - name: Send Slack Notification
        if: steps.check-drift.outputs.drift_detected == 'true'
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              "text": "Infrastructure Drift Detected",
              "attachments": [
                {
                  "color": "warning",
                  "fields": [
                    {
                      "title": "Environment",
                      "value": "${{ matrix.environment }}",
                      "short": true
                    },
                    {
                      "title": "Repository",
                      "value": "${{ github.repository }}",
                      "short": true
                    },
                    {
                      "title": "Workflow",
                      "value": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                      "short": false
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  summary:
    name: Drift Detection Summary
    runs-on: ubuntu-latest
    needs: drift-detection
    if: always()
    
    steps:
      - name: Generate Summary
        uses: actions/github-script@v7
        with:
          script: |
            const summary = `
            ## Drift Detection Summary
            
            **Date**: ${new Date().toISOString()}
            **Workflow**: ${{ github.workflow }}
            **Run ID**: ${{ github.run_id }}
            
            ### Results by Environment
            
            | Environment | Status | Action Required |
            |-------------|--------|-----------------|
            | dev | ${{ needs.drift-detection.result }} | Check artifacts if drift detected |
            | staging | ${{ needs.drift-detection.result }} | Check artifacts if drift detected |
            | prod | ${{ needs.drift-detection.result }} | Check artifacts if drift detected |
            
            ### Recommendations
            - Review any detected drift immediately
            - Investigate root causes of configuration changes
            - Update processes to prevent unauthorized changes
            - Consider implementing additional monitoring
            `;
            
            core.summary.addRaw(summary);
